p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )+
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=2) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = 0 )+
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=2) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )+
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=2) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
mcars
dput(datatest2)
c=rbind(datatest2$genotype, datatest2$score)
c
c=data.frame(datatest2$genotype, datatest2$score)
c
c[,1:40]
c[1:40,]
dput(c[1:40,])
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 2L, 2L, 6L, 6L, 6L, 6L, 2L,
4L, 6L, 2L, 2L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("datatest2.genotype",
"datatest2.score"), row.names = c(NA, 40L), class = "data.frame")
if(is.na(subneg)){subneg=6000}
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1))
c=data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1),
10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1), is.na(datatest2$X1_pretest1) )
colnames (c)= c(1:7)
Pvalue <- function(x){
suppressWarnings(wt <-wilcox.test(x, alternative="two.sided"))
P=wt$p.value
ret=""
if (P<0.05) ret="*"
if (P<0.01) ret="**"
return=ret
}
#theme_set(theme_bw())
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
#axis.text = element_text(colour = "white"),
,axis.title.x = element_text(colour = "white", size=0),
axis.title.y = element_text(size=12, angle=90),
#panel.background = element_rect(fill="green"),
#panel.grid.minor.y = element_line(size=3),
axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
,axis.line=element_line()
,panel.border = element_blank()
,panel.grid.minor = element_blank()
# plot.background = element_rect(fill="red")
#,panel.grid = element_blank()
,panel.grid.major.x = element_blank()
#,axis.text.x = element_text(angle=90, vjust=0)
,legend.position = "none"
#,scale_x_continuous(expand=c(0,0))
)
}
theme_set(theme_jack())
# data.size <- ddply(datatest2, .(genotype2), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
# data.size2<- ddply(datatest2, .(genotype2), summarize , star=Pvalue(score),score=median(score)+0.05)
# #data.size
# p=ggplot(datatest2, aes(x=factor(datatest2$genotype2),y= score, fill= genotypefull2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)
# p=ggplot(datatest2, aes(x=factor(genotype2),y= score, fill= genotype2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)+ ##allow good bw prints
# geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size) + geom_text(aes(label=paste(star)), data=data.size2)
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )+
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=2) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )+
geom_text()
plot
datatest2
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 2L, 2L, 6L, 6L, 6L, 6L, 2L,
4L, 6L, 2L, 2L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("datatest2.genotype",
"datatest2.score"), row.names = c(NA, 40L), class = "data.frame")
datatest2
p=ggplot(datatest2, aes(x=factor(datatest2.genotype),y= datatest2.score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )+
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
c
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L,
6L, 6L, 6L, 6L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("datatest2.genotype",
"datatest2.score"), row.names = c(NA, 40L), class = "data.frame")
p=ggplot(datatest2, aes(x=factor(datatest2.genotype),y= datatest2.score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
require (ggplot2)
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
,axis.title.x = element_text(colour = "white", size=0)
,axis.title.y = element_text(size=12, angle=90)
,axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
,axis.line=element_line()
,panel.border = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.x = element_blank()
,legend.position = "none"
)
}
theme_set(theme_jack())
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L,
6L, 6L, 6L, 6L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("datatest2.genotype",
"datatest2.score"), row.names = c(NA, 40L), class = "data.frame")
p=ggplot(datatest2, aes(x=factor(datatest2.genotype),y= datatest2.score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
datatest2
datatest2=droplevels(datatest2)
p=ggplot(datatest2, aes(x=factor(datatest2.genotype),y= datatest2.score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
plot
p
datatest2=droplevels(datatest2)
p=ggplot(datatest2, aes(x=datatest2.genotype,y= datatest2.score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
factor(datatest2.genotype)
datatest2
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L,
6L, 6L, 6L, 6L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("genotype",
"score"), row.names = c(NA, 40L), class = "data.frame")
datatest2=droplevels(datatest2)
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L,
6L, 6L, 6L, 6L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "character"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("genotype",
"score"), row.names = c(NA, 40L), class = "data.frame")
datatest2=droplevels(datatest2)
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()
plot
require (ggplot2)
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
,axis.title.x = element_text(colour = "white", size=0)
,axis.title.y = element_text(size=12, angle=90)
,axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
,axis.line=element_line()
,panel.border = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.x = element_blank()
,legend.position = "none"
)
}
theme_set(theme_jack())
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L,
6L, 6L, 6L, 6L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("genotype",
"score"), row.names = c(NA, 40L), class = "data.frame")
datatest2=droplevels(datatest2)
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test")+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
datatest2=droplevels(datatest2)
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test")+ #ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
require (ggplot2)
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
,axis.title.x = element_text(colour = "white", size=0)
,axis.title.y = element_text(size=12, angle=90)
,axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
,axis.line=element_line()
,panel.border = element_blank()
,panel.grid.minor = element_blank()
,panel.grid.major.x = element_blank()
,legend.position = "none"
)
}
theme_set(theme_jack())
datatest2=structure(list(datatest2.genotype = structure(c(1L, 1L, 5L, 5L,
1L, 5L, 5L, 5L, 1L, 5L, 1L, 5L, 1L, 5L, 5L, 1L, 1L, 1L, 5L, 5L,
1L, 1L, 1L, 5L, 1L, 1L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L,
6L, 6L, 6L, 6L), .Label = c("CS_d42-chG80", "CS_G_c380cha", "CS_Gd42-chG80",
"PKC_CS", "PKC_d42-chG80", "PKC_G_c380cha", "PKC_Gd42-chG80"), class = "factor"),
datatest2.score = c(0.8882, -0.3775, -0.4053, 0.1962, 0.9982,
0.5627, -0.4865, 0.7267, 0.3276, 0.5017, 0.9731, 0.1525,
0.7857, 0.6121, 0.8508, 0.1311, -0.2457, 0.8848, -0.1254,
0.1047, -0.2715, 0.7189, 0.4115, 0.9704, -0.8328, -0.1301,
0.9756, 0.2317, 0.4297, 0.9967, 0.6423, 0.8516, 0.3386, 0.5208,
0.9148, 0.2539, 0.8581, 0.5621, 0.5969, 0.7435)), .Names = c("genotype",
"score"), row.names = c(NA, 40L), class = "data.frame")
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test")+ #ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test")+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
p=ggplot(datatest2, aes(x=factor(genotype),y= score))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test")+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )
plot
dat <- data.frame(Row = rep(x = LETTERS[1:5], times = 10)
, Col = rep(x = LETTERS[1:10], each = 5)
, Y = runif(n = 50, min = -1, max = 1))
p <- ggplot(data =  dat, aes(x = Row, y = Col)) +
geom_tile(aes(fill = Y)) +
scale_fill_gradientn(colours=c("blue","cyan","white", "yellow","red"), values=rescale(c(-1,0,1)))
p
??rescale
if(is.na(subneg)){subneg=6000}
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1))
c=data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1),
10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1), is.na(datatest2$X1_pretest1) )
colnames (c)= c(1:7)
Pvalue <- function(x){
suppressWarnings(wt <-wilcox.test(x, alternative="two.sided"))
P=wt$p.value
ret=""
if (P<0.05) ret="*"
if (P<0.01) ret="**"
return=ret
}
#theme_set(theme_bw())
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
#axis.text = element_text(colour = "white"),
,axis.title.x = element_text(colour = "white", size=0),
axis.title.y = element_text(size=12, angle=90),
#panel.background = element_rect(fill="green"),
#panel.grid.minor.y = element_line(size=3),
axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
,axis.line=element_line()
,panel.border = element_blank()
,panel.grid.minor = element_blank()
# plot.background = element_rect(fill="red")
#,panel.grid = element_blank()
,panel.grid.major.x = element_blank()
#,axis.text.x = element_text(angle=90, vjust=0)
,legend.position = "none"
#,scale_x_continuous(expand=c(0,0))
)
}
theme_set(theme_jack())
# data.size <- ddply(datatest2, .(genotype2), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
# data.size2<- ddply(datatest2, .(genotype2), summarize , star=Pvalue(score),score=median(score)+0.05)
# #data.size
# p=ggplot(datatest2, aes(x=factor(datatest2$genotype2),y= score, fill= genotypefull2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)
# p=ggplot(datatest2, aes(x=factor(genotype2),y= score, fill= genotype2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)+ ##allow good bw prints
# geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size) + geom_text(aes(label=paste(star)), data=data.size2)
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
scale_y_continuous(minor_breaks=NULL,breaks = seq(-1 , 1, 1) )+
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=2) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
###do all analysis again. initialisation
#setwd("/Users/choupi/Desktop/boulot/FSdata")
setwd("D:/dokumente/GitHub/learningdata/flightdata/analysis_R/")
numberplot=0
sink("graph/legends.txt", append=FALSE)
cat("Text for figure legends")
cat("\n")
cat("\n")
sink()
##variables
subneg=6500
additional_text = " Both a positive and a negative control were tested in parallel with this experiment."
##PKC gene
source("graph/mutant_analysis.r")
ggsave(file=paste("graph/pdf/",title,".pdf", sep=""), plot=plot,scale=1)
title
paste("graph/pdf/",title,".pdf", sep="")
ggsave(file=paste("graph/pdf/","mutant",".pdf", sep=""), plot=plot,scale=1)
###do all analysis again. initialisation
#setwd("/Users/choupi/Desktop/boulot/FSdata")
setwd("D:/dokumente/GitHub/learningdata/flightdata/analysis_R/")
numberplot=0
sink("graph/legends.txt", append=FALSE)
cat("Text for figure legends")
cat("\n")
cat("\n")
sink()
##variables
subneg=6500
additional_text = " Both a positive and a negative control were tested in parallel with this experiment."
##PKC gene
source("graph/mutant_analysis.r")
source("graph/RNAi53_inac.r")
source("graph/RNAi53_V_T.r")
###PKCi experiment
source("graph/mildHS.r")
source("graph/toostrongHS.r")
source("graph/HSelav.r")
source("graph/PKCi_nophenotype.r")
#source("graph/PKCi_phenotype.r")  ##both PKCi_d42_ok371.r and PKCi_exp16.r data together
source("graph/PKCi_d42_ok371.r")
source("graph/PKCi_exp16.r")  ##d42-c380 exp
source("graph/d42cha.r")
source("graph/GFPexp.r")  ##probably not for paper: UASGFP-> no phenotype
#P_8_2=P_8+theme(axis.text.x=element_text(size=6))
pdf("graph/results2.pdf", paper="a4")
grid.arrange(P_1, P_2, ncol=2, nrow=2)
grid.arrange(P_4, P_5,P_6, P_7)
grid.arrange(P_8, P_9,P_10, ncol=2)
dev.off()
?grid.arrange
grid.arrange(qplot(1:10), xyplot(1:10~1:10),
tableGrob(head(iris)), nrow=2, as.table=TRUE, main="test main",
sub=textGrob("test sub", gp=gpar(font=2)))
require(lattice)
grid.arrange(qplot(1:10), xyplot(1:10~1:10),
tableGrob(head(iris)), nrow=2, as.table=TRUE, main="test main",
sub=textGrob("test sub", gp=gpar(font=2)))
library(gridExtra)
g <- lapply(1:8, function(ii) gTree(children=gList(rectGrob(gp=gpar(fill=ii,alpha=0.2)), textGrob(label=ii,gp=gpar(col=ii)))))
## arrange the first 6 in a 3-column even grid
grid6 <- do.call(arrangeGrob, c(g[1:6],list(ncol=3)))
## arrange the last two in a row, distributed unevenly
row2 <- do.call(arrangeGrob, c(g[7:8],list(ncol=2,widths=c(1/3,2/3))))
grid.arrange(grid6, row2, heights=c(2/3,1/3),nrow=2)
library(rfigshare)
library(rfigshare, echo=T)
install.packages("citation")
citation (rfigshare)
citation ("rfigshare")
x=citation ("rfigshare","cowplot")
citation ("rfigshare","cowplot")
x=citation ("rfigshare")
toBibtex(x)
toBibtex(citation ("rfigshare"))
c(
toBibtex(citation ("rfigshare")),
toBibtex(citation ("cowplot")),
toBibtex(citation ("ggplot2")),
toBibtex(citation ("plyr")),
toBibtex(citation ("gridExtra"))
)
print(
toBibtex(citation ("rfigshare")),
toBibtex(citation ("cowplot")),
toBibtex(citation ("ggplot2")),
toBibtex(citation ("plyr")),
toBibtex(citation ("gridExtra"))
)
paste(
toBibtex(citation ("rfigshare")),
toBibtex(citation ("cowplot")),
toBibtex(citation ("ggplot2")),
toBibtex(citation ("plyr")),
toBibtex(citation ("gridExtra")), sep="\n"
)
toBibtex(citation ("rfigshare"))
class(toBibtex(citation ("rfigshare")))
?bibtex
pkgs=c("rfigshare","cowplot","ggplot2","plyr","gridExtra")
bibs <- lapply(pkgs, function(x) try(citation(x)))
bibs
bibs2 <- do.call("c", bibs)
bibs2
toBibtex(bibs)
a= lapply(bibs, function(x) try(toBibtex(x)))
a
print(a)
?toBibtex
toLatex(sessionInfo(), locale = FALSE)
library(rfigshare)
toLatex(sessionInfo(), locale = FALSE)
print(a)
toBibtex
toBibtex()
a= lapply(bibs, function(x) try(tolatex(x)))
print(a)
a= lapply(bibs, function(x) try(toLatex(x)))
a= lapply(pkgs, function(x) try(toLatex(x)))
print(a)
a= lapply(bibs, function(x) try(toBibtex(x)))
print(a)
bibs
