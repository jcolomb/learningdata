setwd("D:/dokumente/GitHub/learningdata/flightdata/dataR/graph")
setwd("D:/dokumente/GitHub/learningdata/flightdata")
setwd("D:/dokumente/GitHub/learningdata/flightdata/dataR")
source("graph/getdata.r")
numberplot=0
subneg=6500
source("graph/getdata.r")
install.packages("gridExtra")
numberplot=0
source("graph/getdata.r")
source("graph/getdata.r")
metafile
levels(metafile$experimentid)
datatest2= metafile[metafile$experimentid %in% c("3_FoxPdicerRNA"  )
,]
head(datatest2)
datatest2$mean_pretest
datatest2= metafile[metafile$experimentid %in% c("3_FoxPdicerRNA"  ),]
head(datatest2)
datatest2= metafile[metafile$experimentid %in% c("3_FoxPdicerRNAi"  ),]
head(datatest2)
levels(datatest2$genotype)
datatest2= droplevels(datatest2)
levels(datatest2$genotype)
neworder= c(1,2,3)
datatest2$genotype2 <- factor(datatest2$genotype, levels = levels(datatest2$genotype)[neworder])
datatest2$shortname =datatest2$genotype2
source ("graph/makegraph.r")
neworder2= c(1,2,3)
source ("graph/makegraph.r")
if(is.na(subneg)){subneg=6000}
datatest2 = subset (datatest2, datatest2$mean_pretest > -subneg)
datatest2 = subset (datatest2, datatest2$mean_pretest <  subneg)
Pvalue <- function(x){
suppressWarnings(wt <-wilcox.test(x, alternative="two.sided"))
P=wt$p.value
ret=""
if (P<0.05) ret="*"
if (P<0.01) ret="**"
return=ret
}
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
#axis.text = element_text(colour = "white"),
,axis.title.x = element_text(colour = "white", size=0),
axis.title.y = element_text(size=12, angle=90),
#panel.background = element_rect(fill="green"),
#panel.grid.minor.y = element_line(size=3),
axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
# plot.background = element_rect(fill="red")
#,panel.grid = element_blank()
,panel.grid.major.x = element_blank()
#,axis.text.x = element_text(angle=90, vjust=0)
,legend.position = "none"
)
}
theme_set(theme_jack())
# data.size <- ddply(datatest2, .(genotype2), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
# data.size2<- ddply(datatest2, .(genotype2), summarize , star=Pvalue(score),score=median(score)+0.05)
# #data.size
# p=ggplot(datatest2, aes(x=factor(datatest2$genotype2),y= score, fill= genotypefull2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)
# p=ggplot(datatest2, aes(x=factor(genotype2),y= score, fill= genotype2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)+ ##allow good bw prints
# geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size) + geom_text(aes(label=paste(star)), data=data.size2)
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest2, "shortname", summarise, mmpg = mean(score))
# ggplot(mm, aes(x = factor(shortname), y = mmpg)) + geom_bar(stat = "identity")
# if (length(levels(datatest2$shortname ))>4){
# ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.8)
# }else{ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.5)}
assign(paste("P_", numberplot, sep=""),plot)
plot
plot
datatest2$shortname
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
factor(shortname)
attach(datatest2)
factor(shortname)
plot
title
title="roxprnai"
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddpl
plot
datatest2$mean_pretest
datatest2$X8_test2
dataframe(datatest2$X2_pretest2,datatest2$mean_pretest)
data.frame(datatest2$X2_pretest2,datatest2$mean_pretest)
if(is.na(subneg)){subneg=6000}
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > -subneg)
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  subneg)
Pvalue <- function(x){
suppressWarnings(wt <-wilcox.test(x, alternative="two.sided"))
P=wt$p.value
ret=""
if (P<0.05) ret="*"
if (P<0.01) ret="**"
return=ret
}
#theme_set(theme_bw())
theme_jack <- function (base_size = 10, base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
title = element_text(size = 12)
#axis.text = element_text(colour = "white"),
,axis.title.x = element_text(colour = "white", size=0),
axis.title.y = element_text(size=12, angle=90),
#panel.background = element_rect(fill="green"),
#panel.grid.minor.y = element_line(size=3),
axis.text.x=element_text(size=8)
,panel.grid.major = element_line(colour = "grey")#,
# plot.background = element_rect(fill="red")
#,panel.grid = element_blank()
,panel.grid.major.x = element_blank()
#,axis.text.x = element_text(angle=90, vjust=0)
,legend.position = "none"
)
}
theme_set(theme_jack())
# data.size <- ddply(datatest2, .(genotype2), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
# data.size2<- ddply(datatest2, .(genotype2), summarize , star=Pvalue(score),score=median(score)+0.05)
# #data.size
# p=ggplot(datatest2, aes(x=factor(datatest2$genotype2),y= score, fill= genotypefull2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)
# p=ggplot(datatest2, aes(x=factor(genotype2),y= score, fill= genotype2))
# p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
# scale_fill_grey(start = 0.4, end = 1)+ ##allow good bw prints
# geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size) + geom_text(aes(label=paste(star)), data=data.size2)
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest2, "shortname", summarise, mmpg = mean(score))
# ggplot(mm, aes(x = factor(shortname), y = mmpg)) + geom_bar(stat = "identity")
# if (length(levels(datatest2$shortname ))>4){
# ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.8)
# }else{ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.5)}
assign(paste("P_", numberplot, sep=""),plot)
plot
10000*datatest2$mean_pretest
data.frame(datatest2$X2_pretest2,datatest2$mean_pretest)
datatest2
datatest2= metafile[metafile$experimentid %in% c("3_FoxPdicerRNAi"  ),]
datatest2= droplevels(datatest2)
levels(datatest2$genotype)
neworder= c(1,2,3)
datatest2$genotype2 <- factor(datatest2$genotype, levels = levels(datatest2$genotype)[neworder])
levels(datatest2$shortname)
neworder2= c(1,2,3)
datatest2$shortname=datatest2$genotype
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest2, "shortname", summarise, mmpg = mean(score))
plot
subneg=6000
if(is.na(subneg)){subneg=6000}
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > -subneg)
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  subneg)
Pvalue <- function(x){
suppressWarnings(wt <-wilcox.test(x, alternative="two.sided"))
P=wt$p.value
ret=""
if (P<0.05) ret="*"
if (P<0.01) ret="**"
return=ret
}
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
subneg=6500
(-subneg+500)
(subneg-500)
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg)
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg)
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500))
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
if(is.na(subneg)){subneg=6000}
if (is.na(datatest2$X1_pretest1)){
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg)
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg)
}else{
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500))
}
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
datatest2= metafile[metafile$experimentid %in% c("3_FoxPdicerRNAi"  ),]
datatest2= droplevels(datatest2)
datatest2$shortname=datatest2$genotype
levels(datatest2$genotype)
neworder= c(1,2,3)
datatest2$genotype2 <- factor(datatest2$genotype, levels = levels(datatest2$genotype)[neworder])
levels(datatest2$shortname)
neworder2= c(1,2,3)
test=datatest2
if (is.na(datatest2$X1_pretest1)){
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg)
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg)
}else{
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500))
}
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
plot
datatest2=test
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddp
plot
subneg=6000
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg)
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg)
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddp
plot
subset=6500
datatest2=test
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500))
# geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size) + geom_text(aes(label=paste(star)), data=data.size2)
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest2, "shortname", summarise, mmpg = mean(score))
# ggplot(mm, aes(x = factor(shortname), y = mmpg)) + geom_bar(stat = "identity")
# if (length(levels(datatest2$shortname ))>4){
# ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.8)
# }else{ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.5)}
assign(paste("P_", numberplot, sep=""),plot)
plot
is.na(datatest2$X1_pretest1)
if (is.na(datatest2$X1_pretest1)){
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg)
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg)
}else{
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500))
}
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg && is.na(datatest2$X1_pretest1))
datatest2=test
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg && is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg && is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500))
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(d
plot
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) || !is.na(datatest2$X1_pretest1))
datatest2=test
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg || is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg || is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) || !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500)|| !is.na(datatest2$X1_pretest1))
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest
plot
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg || !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg || !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) || is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500)|| is.na(datatest2$X1_pretest1))
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(data
plot
datatest2
datatest2=test
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg || !is.na(datatest2$X1_pretest1))
datatest2
!is.na(datatest2$X1_pretest1)
datatest2$X2_pretest2 > -subneg
datatest2$X2_pretest2 > -subneg || !is.na(datatest2$X1_pretest1)
datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1)
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1))
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest2, "shortname", summarise, mmpg = mean(score))
# ggplot(mm, aes(x = factor(shortname), y = mmpg)) + geom_bar(stat = "identity")
# if (length(levels(datatest2$shortname ))>4){
# ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.8)
# }else{ggsave(file=paste("graph/pdfs/",title,".pdf", sep=""), plot=plot,scale=0.5)}
assign(paste("P_", numberplot, sep=""),plot)
plot
datatest2=test
10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1)
10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1)
datatest2$mean_pretest
datatest2$X2_pretest2
data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,all(10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1),))
data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,all(10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1)))
data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1))
data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1),
10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1) )
?data.frame
?names
?col.names
?colnames
colnames (c)= c(1:6)
c=data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1),
10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1) )
colnames (c)= c(1:6)
c
c=data.frame(datatest2$mean_pretest,datatest2$X2_pretest2,10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1),
10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1),
datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1), is.na(datatest2$X1_pretest1) )
colnames (c)= c(1:7)
c
subneg
subneg=6500
datatest2 = subset (datatest2, datatest2$X2_pretest2 > -subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, datatest2$X2_pretest2 <  subneg | !is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest > (-subneg+500) | is.na(datatest2$X1_pretest1))
datatest2 = subset (datatest2, 10000*datatest2$mean_pretest <  (subneg-500)| is.na(datatest2$X1_pretest1))
data.size <- ddply(datatest2, .(shortname), summarize, n=length(score), score=median(score)-0.1) ##"score" need to be calculated at the end, need to be named score
data.size2<- ddply(datatest2, .(shortname), summarize , star=Pvalue(score),score=median(score)+0.03)
p=ggplot(datatest2, aes(x=factor(shortname),y= score, fill= shortname))
plot=p+ geom_boxplot()+ labs(x="genotype",y="PI during final test", title=title)+ ylim(-1.2, 1)+
scale_fill_grey(start = 0.9, end = 0.9)+ ##allow good bw prints
geom_text(aes(y= -1.1,label=paste("n =", n)), data=data.size, size=3.5) + geom_text(aes(label=paste(star)), data=data.size2,size=6)
# mm <- ddply(datatest2, "shortname", summarise, mmpg = mean(score))
# ggplot(mm, aes(x = factor(shortname), y = mmpg)) + geom_bar(stat = "identity")
# if (length(levels(datatest2$shortname ))>4){
# ggsave(file=pas
plot
